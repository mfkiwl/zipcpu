[tasks]
dcache		full_proof      dcache    mpy div cis pipelined earlybranching
piped		full_proof      no_dcache mpy div cis pipelined earlybranching
# unpipedearly	nopipe          no_dcache mpy div cis           earlybranching
nopipe		nopipe          no_dcache         cis
lowlogic	nopipe		no_dcache
ice40		nopipe          no_dcache mpy div cis nobkram

[options]
mode prove
depth 18
dcache:   depth 10
piped:    depth 14
nopipe:   depth 11
lowlogic: depth  8
ice40:    depth 11

[engines]
smtbmc boolector

[script]
nobkram: read -define -DNO_DISTRIBUTED_RAM
read -define -DZIPCPU
#
read -formal -D ZIPCPU cpuops.v
read -formal -D ZIPCPU memops.v
read -formal -D ZIPCPU pipemem.v
read -formal -D ZIPCPU dcache.v
read -formal -D ZIPCPU iscachable.v
read -formal -D ZIPCPU idecode.v
read -formal -D ZIPCPU wbdblpriarb.v
#
read -formal -D ZIPCPU fwb_counter.v
read -formal -D ZIPCPU fwb_master.v
read -formal -D ZIPCPU fwb_slave.v
read -formal -D ZIPCPU f_idecode.v
read -formal -D ZIPCPU abs_prefetch.v
read -formal -D ZIPCPU abs_div.v
read -formal -D ZIPCPU abs_mpy.v
#
read -formal zipcpu.v
--pycode-begin--
cmd = "hierarchy -top zipcpu"
cmd += " -chparam IMPLEMENT_FPU 0"
cmd += " -chparam OPT_LGDCACHE  %d"    % (10 if "dcache"         in tags else 0)
cmd += " -chparam IMPLEMENT_MPY %d"    % ( 1 if "mpy"            in tags else 0)
cmd += " -chparam IMPLEMENT_DIVIDE %d" % ( 1 if "div"            in tags else 0)
cmd += " -chparam OPT_CIS          %d" % ( 1 if "cis"            in tags else 0)
cmd += " -chparam OPT_PIPELINED    %d" % ( 1 if "pipelined"      in tags else 0)
cmd += " -chparam EARLY_BRANCHING  %d" % ( 1 if "earlybranching" in tags else 0)
output(cmd)
--pycode-end--

prep -top zipcpu

[files]
../../rtl/core/zipcpu.v
../../rtl/core/cpuops.v
../../rtl/core/memops.v
../../rtl/core/pipemem.v
../../rtl/core/dcache.v
../../rtl/core/iscachable.v
../../rtl/core/idecode.v
../../rtl/ex/wbdblpriarb.v
#
../../rtl/ex/fwb_counter.v
../../rtl/ex/fwb_master.v
../../rtl/ex/fwb_slave.v
#
../../rtl/cpudefs.v
f_idecode.v
abs_prefetch.v
abs_div.v
abs_mpy.v
#
